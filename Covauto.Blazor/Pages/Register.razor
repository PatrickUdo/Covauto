@page "/register"
@inject IAuthService AuthService
@inject Covauto.Blazor.Services.AuthService AuthService
<div class="flex items-center justify-center min-h-screen bg-gray-100">
	<div class="w-full max-w-sm p-8 bg-white rounded-lg shadow-lg">
		<h2 class="mb-6 text-2xl font-bold text-center text-gray-800">Registreer</h2>
		<div class="mb-4">
			<label class="block mb-2 text-sm font-medium text-gray-700" for="email">Email</label>
			<input @bind="Email" id="email" type="email" class="w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500" />
		</div>
		<div class="mb-6">
			<label class="block mb-2 text-sm font-medium text-gray-700" for="password">Wachtwoord</label>
			<input @bind="Password" id="password" type="password" class="w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500" />
		</div>
		<button @onclick="RegisterAsync" class="w-full px-4 py-2 font-semibold text-white bg-indigo-600 rounded-lg hover:bg-indigo-700 focus:outline-none">
			Registreer
		</button>
		@if (!string.IsNullOrEmpty(Message))
		{
			<div class="mt-4 text-center text-sm @(IsError ? "text-red-500" : "text-green-500")">@Message</div>
		}
		<div class="text-center mt-2">Of <a href="/login">Login</a></div>
	</div>
</div>
@code {
	private string Email { get; set; } = string.Empty;
	private string Password { get; set; } = string.Empty;
	private string Message { get; set; } = string.Empty;
	private bool IsError { get; set; } = false;

	private async Task RegisterAsync()
	{
		var result = await AuthService.RegisterAsync(Email, Password);

		Message = result.Message;
		IsError = !result.Success;

		if (result.Success)
		{
			Email = Password = string.Empty;
		}
	}
}